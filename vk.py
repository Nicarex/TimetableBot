import configparser
from vk_api import VkApi
from vk_api.utils import get_random_id
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from timetable import timetable
from dbf import connect_to_dbf
import sql_db

config = configparser.ConfigParser()
config.read("config.ini")
GROUP_ID = config['VK']['group_id']
GROUP_TOKEN = config['VK']['group_token']
API_VERSION = '5.120'


# –ö–Ω–æ–ø–∫–∏
keyboard_default_chat = VkKeyboard(one_time=False, inline=True)
keyboard_default_chat.add_button('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é', color=VkKeyboardColor.PRIMARY)
keyboard_default_chat.add_line()
keyboard_default_chat.add_button('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é', color=VkKeyboardColor.POSITIVE)
keyboard_default_chat.add_line()
keyboard_default_chat.add_openlink_button('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ', link="https://amchs.ru/students/raspisanie/")
keyboard_default_chat.add_line()
keyboard_default_chat.add_button('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', color=VkKeyboardColor.NEGATIVE)

keyboard_default_peer = VkKeyboard(one_time=False)
keyboard_default_peer.add_button('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é', color=VkKeyboardColor.PRIMARY)
keyboard_default_peer.add_button('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é', color=VkKeyboardColor.POSITIVE)
keyboard_default_peer.add_line()
keyboard_default_peer.add_openlink_button('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ', link="https://amchs.ru/students/raspisanie/")
keyboard_default_peer.add_button('–ù–∞—Å—Ç—Ä–æ–π–∫–∏', color=VkKeyboardColor.NEGATIVE)


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
vk_session = VkApi(token=GROUP_TOKEN, api_version=API_VERSION)
vk = vk_session.get_api()
long_poll = VkBotLongPoll(vk_session, group_id=GROUP_ID)


# –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–µ—Å–µ–¥—É
def write_msg_chat(event, message, keyboard=None):
    if keyboard is not None:
        keyboard = keyboard.get_keyboard()
    vk.messages.send(chat_id=int(event.chat_id), message=message, keyboard=keyboard, random_id=get_random_id())


# –°–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
def write_msg_user(event, message, keyboard=None):
    if keyboard is not None:
        keyboard = keyboard.get_keyboard()
    vk.messages.send(peer_id=int(event.obj.message['peer_id']), message=message, keyboard=keyboard, random_id=get_random_id())


# –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è —á–µ–ª–æ–≤–µ–∫–∞
def get_user_info(event):
    user_get = vk.users.get(user_ids=event.obj.message['from_id'])[0]
    return user_get['first_name'] + " " + user_get['last_name']


# –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ –∑–∞–¥–∞–Ω–Ω–æ–º—É –∑–Ω–∞—á–µ–Ω–∏—é +1
def plus_one(number):
    if number == 1:
        return 2
    elif number == 2:
        return 3
    elif number == 3:
        return 4
    elif number == 4:
        return 5


# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
def vk_start_server():
    print("\nServer started")
    message_typing = {}
    while True:
        try:
            for event in long_poll.listen():
                print(event)
                # –ë–µ—Å–µ–¥–∞
                if event.type == VkBotEventType.MESSAGE_NEW and event.from_chat:
                    request = event.obj.message['text'].lower()
                    print('[VK] CHAT message: from ' + get_user_info(event) + ' text: ' + request)
                    if "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é" in request:
                        write_msg_chat(event, '–í–µ–¥—É—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã')
                    elif "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é" in request:
                        write_msg_chat(event, '–í–µ–¥—É—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã')
                    elif not request.find('@all') == -1:
                        print('@all detected!')
                    elif not str(event.obj.message).find('chat_invite_user') == -1:
                        print('\nBot invited to chat')
                        write_msg_chat(event, '–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!\n–Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º\n–î–ª—è –≤—ã–∑–æ–≤–∞ –ø—Ä–æ–ø–∏—à–∏—Ç–µ /—á—Ç–æ—É–≥–æ–¥–Ω–æ –∏–ª–∏ @bot_agz\n–í–ù–ò–ú–ê–ù–ò–ï! –ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ –±–µ—Ç–∞-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
                    else:
                        write_msg_chat(event, message='üëáüëáüëá', keyboard=keyboard_default_chat)
                # –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                elif event.type == VkBotEventType.MESSAGE_NEW and event.from_user:
                    request = event.obj.message['text'].lower()
                    print('[VK] USER message: from ' + get_user_info(event) + ' text: ' + request)
                    if "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é" in request:
                        write_msg_user(event, '–í–µ–¥—É—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã')
                    elif "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é" in request:
                        write_msg_user(event, '–í–µ–¥—É—Ç—Å—è —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã')
                    elif request.find('@all') != -1:
                        write_msg_user(event, '–ó–∞—á–µ–º? –≠—Ç–æ –Ω–µ –±–µ—Å–µ–¥–∞, –µ—Å–ª–∏ —á—Ç–æ')
                    else:
                        write_msg_user(event, message='–ù–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã', keyboard=keyboard_default_peer)
                # –ï—Å–ª–∏ —á–µ–ª–æ–≤–µ–∫ –¥–æ–ª–≥–æ –ø–µ—á–∞—Ç–∞–µ—Ç, —Ç–æ –µ–º—É –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π
                if event.type == VkBotEventType.MESSAGE_TYPING_STATE:
                    if message_typing.get(int(event.object['from_id'])):
                        message_typing.update(
                            {int(event.object['from_id']): plus_one(message_typing.get(int(event.object['from_id'])))})
                    else:
                        message_typing.update({int(event.object['from_id']): 1})
                    for user_id, count in message_typing.items():
                        if count == 4:
                            vk.messages.send(peer_id=user_id, message='–Ø –≤–∏–∂—É –≤—ã —á—Ç–æ-—Ç–æ –¥–æ–ª–≥–æ –ø–µ—á–∞—Ç–∞–µ—Ç–µ\n–ï—Å–ª–∏ —á—Ç–æ, –≤–æ—Ç –Ω–∞—à —Å–∞–π—Ç —Å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π:\nhttps://vk.link/bot_agz', random_id=get_random_id())
        except KeyboardInterrupt:
            print('Successfully stopped')
        # except requests.exceptions.ReadTimeout as timeout:
        #     continue


vk_start_server()
