import configparser
from vk_api import VkApi
from vk_api.utils import get_random_id
from vk_api.bot_longpoll import VkBotLongPoll, VkBotEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
import group307


config = configparser.ConfigParser()
config.read("config.ini")
GROUP_ID = config['VK']['group_id']
GROUP_TOKEN = config['VK']['group_token']
API_VERSION = '5.120'

# –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç
vk_session = VkApi(token=GROUP_TOKEN, api_version=API_VERSION)
vk = vk_session.get_api()
long_poll = VkBotLongPoll(vk_session, group_id=GROUP_ID)


# –°–æ–æ–±—â–µ–Ω–∏–µ –≤ –±–µ—Å–µ–¥—É
def write_msg_chat(chat_id, message):
    vk.messages.send(chat_id=chat_id, message=message, random_id=get_random_id())


# –°–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
def write_msg_peer(peer_id, message):
    vk.messages.send(peer_id=peer_id, message=message, random_id=get_random_id())


# –ò–º—è –∏ —Ñ–∞–º–∏–ª–∏—è —á–µ–ª–æ–≤–µ–∫–∞
def get_user_info(page_id):
    user_get = vk.users.get(user_ids=page_id)
    user_get = user_get[0]
    first_name = user_get['first_name']
    last_name = user_get['last_name']
    full_name = first_name + " " + last_name
    return full_name


# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard_1_chat = VkKeyboard(one_time=False, inline=True)
keyboard_1_chat.add_button('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é', color=VkKeyboardColor.PRIMARY)
keyboard_1_chat.add_line()
keyboard_1_chat.add_button('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é', color=VkKeyboardColor.POSITIVE)
keyboard_1_chat.add_line()
keyboard_1_chat.add_openlink_button('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ', link="https://amchs.ru/students/raspisanie/")

keyboard_1_peer = VkKeyboard(one_time=False)
keyboard_1_peer.add_button('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é', color=VkKeyboardColor.PRIMARY)
keyboard_1_peer.add_line()
keyboard_1_peer.add_button('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é', color=VkKeyboardColor.POSITIVE)
keyboard_1_peer.add_line()
keyboard_1_peer.add_openlink_button('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ', link="https://amchs.ru/students/raspisanie/")

keyboard_2 = VkKeyboard(one_time=False)
keyboard_2.add_button('–ù–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é', color=VkKeyboardColor.SECONDARY)
keyboard_2.add_line()
keyboard_2.add_button('–ù–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é', color=VkKeyboardColor.SECONDARY)

# –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
print("\nServer started")
while True:
    try:
        for event in long_poll.listen():
            print(event)

            if event.type == VkBotEventType.MESSAGE_NEW and event.from_chat:
                print(event.chat_id)
                request = event.obj.message["text"]
                request = request.lower()
                print('\nNew message:')
                print('For me by:', get_user_info(event.obj.message['from_id']), end=' ')
                print('Text:', request)

                if "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é" in request:
                    # write_msg_chat(int(event.chat_id),
                    #                '–†–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –≤ –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ —Å '
                    #                '–ù–æ–≤–æ–≥–æ –≥–æ–¥–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ –≤ –≤–∏–¥–µ pdf-—Ñ–∞–π–ª–æ–≤, –∞ –Ω–µ Excel')
                    group307.timetable_now()
                    write_msg_chat(int(event.chat_id), "–•–∞–π, –≤–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n")
                    f = open('timetable.txt')
                    write_msg_chat(int(event.chat_id), f.read())
                elif "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é" in request:
                    # write_msg_chat(int(event.chat_id),
                    #                '–†–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –≤ –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ —Å '
                    #                '–ù–æ–≤–æ–≥–æ –≥–æ–¥–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ –≤ –≤–∏–¥–µ pdf-—Ñ–∞–π–ª–æ–≤, –∞ –Ω–µ Excel')
                    group307.timetable_next()
                    write_msg_chat(int(event.chat_id), "–í–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n")
                    f = open('timetable.txt')
                    write_msg_chat(int(event.chat_id), f.read())
                # elif "–ø–æ–∫–∞" in request:
                #     write_msg_chat(int(event.chat_id), "–ü–æ–∫–∞((")
                elif not request.find('@all') == -1:
                    print('@all detected!')
                elif not str(event.obj.message).find('chat_invite_user') == -1:
                    print('\nBot invited to chat')
                    write_msg_chat(int(event.chat_id),
                                   '–í—Å–µ–º –ø—Ä–∏–≤–µ—Ç!\n–Ø - –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–º–æ–≥–∞–µ—Ç —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º\n–î–ª—è –≤—ã–∑–æ–≤–∞ –ø—Ä–æ–ø–∏—à–∏—Ç–µ '
                                   '/—á—Ç–æ—É–≥–æ–¥–Ω–æ –∏–ª–∏ @bot_agz\n–í–ù–ò–ú–ê–ù–ò–ï! –ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å—Ç–∞–¥–∏–∏ –±–µ—Ç–∞-—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è')
                else:
                    vk.messages.send(
                        chat_id=int(event.chat_id),
                        random_id=get_random_id(),
                        keyboard=keyboard_1_chat.get_keyboard(),
                        message='üëáüëáüëá')
            elif event.type == VkBotEventType.MESSAGE_NEW and event.from_user:
                print(int(event.object.message['peer_id']))
                request = event.obj.message["text"]
                request = request.lower()
                for_me_by = str(get_user_info(event.obj.message['from_id']))
                print('\nNew message:')
                print('For me by:', get_user_info(event.obj.message['from_id']), end=' ')
                print('Text:', request)
                #                log_write('\nNew message:')
                #                log_write('For me by:', get_user_info(event.obj.message['from_id']), end=' ')
                #                log_write('Text:', request)
                if "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é" in request:
                    # write_msg_peer(int(event.object.message['peer_id']),
                    #                '–†–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –≤ –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ —Å '
                    #                '–ù–æ–≤–æ–≥–æ –≥–æ–¥–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ –≤ –≤–∏–¥–µ pdf-—Ñ–∞–π–ª–æ–≤, –∞ –Ω–µ Excel')
                    group307.timetable_now()
                    write_msg_peer(int(event.object.message['peer_id']), "–•–∞–π, –≤–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n")
                    f = open('timetable.txt')
                    write_msg_peer(int(event.object.message['peer_id']), f.read())
                elif "—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é" in request:
                    # write_msg_peer(int(event.object.message['peer_id']),
                    #                '–†–∞–±–æ—Ç–∞ –±–æ—Ç–∞ –≤ –Ω–∞—Å—Ç–æ—è—â–∏–π –º–æ–º–µ–Ω—Ç –ø—Ä–∏–æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, —Ç–∞–∫ –∫–∞–∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ —Å–∞–π—Ç–µ —Å '
                    #                '–ù–æ–≤–æ–≥–æ –≥–æ–¥–∞ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–æ –≤ –≤–∏–¥–µ pdf-—Ñ–∞–π–ª–æ–≤, –∞ –Ω–µ Excel')
                    group307.timetable_next()
                    write_msg_peer(int(event.object.message['peer_id']), "–•–∞–π, –≤–æ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n")
                    f = open('timetable.txt')
                    write_msg_peer(int(event.object.message['peer_id']), f.read())
                # elif "–ø–æ–∫–∞" in request:
                #     write_msg_peer(int(event.object.message['peer_id']), "–ü–æ–∫–∞((")
                elif not request.find('@all') == -1:
                    write_msg_peer(int(event.object.message['peer_id']), '–ó–∞—á–µ–º? –≠—Ç–æ –Ω–µ –±–µ—Å–µ–¥–∞, –µ—Å–ª–∏ —á—Ç–æ')
                else:
                    vk.messages.send(
                        peer_id=int(event.object.message['peer_id']),
                        random_id=get_random_id(),
                        message='–ù–µ—Ç —Ç–∞–∫–æ–π –∫–æ–º–∞–Ω–¥—ã')
            # elif event.type == VkBotEventType.MESSAGE_EVENT:
    except:
        continue
    # except requests.exceptions.ReadTimeout as timeout:
    #     continue

# import json
# CALLBACK_TYPES = []
# f_toggle: bool = False
# for event in long_poll.listen():
#     # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –º–µ–Ω—é 1–≥–æ –≤–∏–¥–∞ –Ω–∞ –ª—é–±–æ–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#     if event.type == VkBotEventType.MESSAGE_NEW:
#         if event.obj.message['text'] != '':
#             if event.from_user:
#                 # –ï—Å–ª–∏ –∫–ª–∏–µ–Ω—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç callback-–∫–Ω–æ–ø–∫–∏,
#                 # –Ω–∞–∂–∞—Ç–∏–µ –Ω–∞ –Ω–∏—Ö –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Ç–µ–∫—Å—Ç–æ–≤—ã–µ
#                 # —Å–æ–æ–±—â–µ–Ω–∏—è. –¢.–µ. –æ–Ω–∏ –±—É–¥—É—Ç —Ä–∞–±–æ—Ç–∞—Ç—å –∫–∞–∫ –æ–±—ã—á–Ω—ã–µ inline –∫–Ω–æ–ø–∫–∏.
#                 if 'callback' not in event.obj.client_info['button_actions']:
#                     print(f'–ö–ª–∏–µ–Ω—Ç {event.obj.message["from_id"]} –Ω–µ –ø–æ–¥–¥–µ—Ä–∂. callback')
#
#                 vk.messages.send(
#                     user_id=event.obj.message['from_id'],
#                     random_id=get_random_id(),
#                     peer_id=event.obj.message['from_id'],
#                     keyboard=keyboard_1_chat.get_keyboard(),
#                     message=event.obj.message['text'])
#     # –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–ª–∏–∫–∏ –ø–æ callback –∫–Ω–æ–ø–∫–∞–º
#     elif event.type == VkBotEventType.MESSAGE_EVENT:
#         # –µ—Å–ª–∏ —ç—Ç–æ –æ–¥–Ω–æ –∏–∑ 3—Ö –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π:
#         if event.object.payload.get('type') in CALLBACK_TYPES:
#             # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–µ—Ä–≤–µ—Ä—É —É–∫–∞–∑–∞–Ω–∏—è –∫–∞–∫ –∫–∞–∫—É—é –∏–∑ –∫–Ω–æ–ø–æ–∫ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å. –≠—Ç–æ –∑–∞–ª–æ–∂–µ–Ω–æ –≤
#             # payload –∫–∞–∂–¥–æ–π callback-–∫–Ω–æ–ø–∫–∏ –ø—Ä–∏ –µ–µ —Å–æ–∑–¥–∞–Ω–∏–∏.
#             # –ù–æ –º–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –∏–Ω–∞—á–µ: –≤ payload –ø–æ–ª–æ–∂–∏—Ç—å —Å–≤–æ–∏ —Å–æ–±—Å—Ç–≤–µ–Ω–Ω—ã–µ
#             # –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã –∫–Ω–æ–ø–æ–∫, –∞ –∑–¥–µ—Å—å –ø–æ –Ω–∏–º –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å
#             # –∫–∞–∫–æ–π –∑–∞–ø—Ä–æ—Å –Ω–∞–¥–æ –ø–æ—Å–ª–∞—Ç—å. –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω –ø–µ—Ä–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç.
#             r = vk.messages.sendMessageEventAnswer(
#                 event_id=event.object.event_id,
#                 user_id=event.object.user_id,
#                 peer_id=event.object.peer_id,
#                 event_data=json.dumps(event.object.payload))
#         # –µ—Å–ª–∏ —ç—Ç–æ –Ω–∞—à–∞ "–∫–∞—Å—Ç–æ–º–Ω–∞—è" (—Ç.–µ. –±–µ–∑ –≤—Å—Ç—Ä–æ–µ–Ω–Ω–æ–≥–æ –¥–µ–π—Å—Ç–≤–∏—è) –∫–Ω–æ–ø–∫–∞, —Ç–æ –º—ã –º–æ–∂–µ–º
#         # –≤—ã–ø–æ–ª–Ω–∏—Ç—å edit —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –∏–∑–º–µ–Ω–∏—Ç—å –µ–≥–æ –º–µ–Ω—é. –ù–æ –ø—Ä–∏ –∂–µ–ª–∞–Ω–∏–∏ –º—ã –º–æ–≥–ª–∏ –±—ã
#         # –Ω–∞ —ç—Ç–æ—Ç –∫–ª–∏–∫ –æ—Ç–∫—Ä—ã—Ç—å —Å—Å—ã–ª–∫—É/–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–ª–∏ –ø–æ–∫–∞–∑–∞—Ç—å pop-up. (—Å–º.–∞–Ω–∏–º–∞—Ü–∏—é –Ω–∏–∂–µ)
#         elif event.object.payload.get('type') == 'my_own_100500_type_edit':
#             last_id = vk.messages.edit(
#                 peer_id=event.obj.peer_id,
#                 message='ola',
#                 conversation_message_id=event.obj.conversation_message_id,
#                 keyboard=(keyboard_1_chat if f_toggle else keyboard_2).get_keyboard())
#             f_toggle = not f_toggle
